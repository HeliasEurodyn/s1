<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ExcelButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        uQDY/wDPdJ+mYL5HswAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column5.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column6.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column7.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column8.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column9.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column10.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column11.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column12.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>